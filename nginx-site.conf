# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##


server {
	listen   80;

	root /app/wordpress;

	# Make site accessible from http://localhost/
	server_name localhost;
	
	# Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

	index index.html index.htm index.php;





	# BEGIN W3TC Minify core
	rewrite ^/wp-content/cache/minify.*/w3tc_rewrite_test$ /wp-content/plugins/w3-total-cache/pub/minify.php?w3tc_rewrite_test=1 last;
	set $w3tc_enc "";
	if ($http_accept_encoding ~ gzip) {
	    set $w3tc_enc .gzip;
	}
	if (-f $request_filename$w3tc_enc) {
	    rewrite (.*) $1$w3tc_enc break;
	}
	rewrite ^/wp-content/cache/minify/(.+/[X]+\.css)$ /wp-content/plugins/w3-total-cache/pub/minify.php?test_file=$1 last;
	rewrite ^/wp-content/cache/minify/(.+\.(css|js))$ /wp-content/plugins/w3-total-cache/pub/minify.php?file=$1 last;
	# END W3TC Minify core




	# BEGIN W3TC Minify cache
	location ~ /wp-content/cache/minify.*\.js$ {
	    types {}
	    default_type application/x-javascript;
	    add_header Vary "Accept-Encoding";
	}
	location ~ /wp-content/cache/minify.*\.css$ {
	    types {}
	    default_type text/css;
	    add_header Vary "Accept-Encoding";
	}
	location ~ /wp-content/cache/minify.*js\.gzip$ {
	    gzip off;
	    types {}
	    default_type application/x-javascript;
	    add_header Vary "Accept-Encoding";
	    add_header Content-Encoding gzip;
	}
	location ~ /wp-content/cache/minify.*css\.gzip$ {
	    gzip off;
	    types {}
	    default_type text/css;
	    add_header Vary "Accept-Encoding";
	    add_header Content-Encoding gzip;
	}
	# END W3TC Minify cache

	# BEGIN W3TC Page Cache core
	set $w3tc_rewrite 1;
	if ($request_method = POST) {
	    set $w3tc_rewrite 0;
	}
	if ($query_string != "") {
	    set $w3tc_rewrite 0;
	}
	if ($request_uri !~ \/$) {
	    set $w3tc_rewrite 0;
	}
	if ($http_cookie ~* "(comment_author|wp\-postpass|w3tc_logged_out|wordpress_logged_in|wptouch_switch_toggle)") {
	    set $w3tc_rewrite 0;
	}
	if ($http_cookie ~* "(w3tc_preview)") {
	    set $w3tc_rewrite _preview;
	}
	set $w3tc_enc "";
	if ($http_accept_encoding ~ gzip) {
	    set $w3tc_enc _gzip;
	}
	if (!-f "$document_root/wp-content/cache/page_enhanced/$http_host/$request_uri/_index$w3tc_rewrite.html$w3tc_enc") {
	  set $w3tc_rewrite 0;
	}
	if ($w3tc_rewrite = 1) {
	    rewrite .* "/wp-content/cache/page_enhanced/$http_host/$request_uri/_index$w3tc_rewrite.html$w3tc_enc" last;
	}
	# END W3TC Page Cache core

	# BEGIN W3TC Page Cache cache
	location ~ /wp-content/cache/page_enhanced.*html$ {
	    add_header Vary "Accept-Encoding, Cookie";
	}
	location ~ /wp-content/cache/page_enhanced.*gzip$ {
	    gzip off;
	    types {}
	    default_type text/html;
	    add_header Vary "Accept-Encoding, Cookie";
	    add_header Content-Encoding gzip;
	}
	# END W3TC Page Cache cache


	# BEGIN W3TC Browser Cache
	gzip on;
	gzip_types text/css text/x-component application/x-javascript application/javascript text/javascript text/x-js text/richtext image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;
	# END W3TC Browser Cache






	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html


		if ($http_user_agent ~ GoogleHC ) {
			rewrite (.*) /health last;
		}

		if ($uri = "/wp-admin/" ) {
			rewrite (.*) /wp-admin/index.php last;
		}

		try_files $uri $uri/ /index.php?$args;
	}


	error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/www;
	}

	# Directives to send expires headers and turn off 404 error logging.
	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
		# access_log off; 
		# log_not_found off; 
		expires max;
	}



	# execute all .php files via php-fpm
	#location ~ [^/]\.php(/|$) {
	location ~ (.*).php {

		fastcgi_split_path_info ^(.+?\.php)(/.*)$;

		fastcgi_pass   127.0.0.1:9000;  # port where FastCGI processes were spawned 
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

		fastcgi_buffer_size 128k;
		fastcgi_buffers 256 16k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;

		# This file is present on Debian systems..
		include fastcgi_params;
	}

	# execute all .php files via php-fpm
	location /health {

		keepalive_timeout 1s;

		fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		fastcgi_pass   127.0.0.1:9000;  # port where FastCGI processes were spawned 
		fastcgi_index health.php;
		fastcgi_param SCRIPT_FILENAME $document_root/health.php;
		include fastcgi_params;
	}


}

